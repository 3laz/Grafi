from scipy.optimize import curve_fit
import numpy as np
import matplotlib.pyplot as plt

x = [1,2,3,4]
y = [59.7, 21.3, 14.5, 6.9]

def func(x, a, c, d):
    return a*np.exp(-c*x)+d

popt, pcov = curve_fit(func, x, y, p0=(1, 1e-6, 1))

print(popt)

xx = np.linspace(1, 4, 100)

yy = func(xx, *popt)

plt.plot(x, y, 'ko')

plt.plot(xx, yy)

x = [1,2,3,4]
y1 = [59.7, 21.3, 14.5, 6.9]
y2 = [27.7,7.8,5.9,3.4]
y3 = [233.1,44.5,30.3,12.4]
y4 = [32.4,11.9,10.2,8.0]
y5 = [38.0,11.9,7.5,4.2]
x1 = [1,2,3]
y6 = [20.8,6.9,5.9]
y7 = [141.7,42.9,18.6,9.7]
y8 = [27.4,8.2,5.8]
xx = np.linspace(1, 4, 100)
xx1 = np.linspace(1,3, 100)

fig, (ax1) = plt.subplots(nrows=1, ncols=1, figsize=(12,5))
plt.scatter([1, 2, 3, 4], (59.7, 21.3, 14.5, 6.9), marker=".", label="T1")
plt.scatter([1, 2, 3, 4], (27.7,7.8,5.9,3.4), marker=".", label="T5")
plt.scatter([1, 2, 3, 4], (233.1,44.5,30.3,12.4), marker=".", label="T2")
plt.scatter([1, 2, 3, 4], (32.4,11.9,10.2,8), marker=".", label="T6")
plt.scatter([1, 2, 3, 4], (38,11.9,7.5,4.2), marker=".", label="T7")
plt.scatter([1, 2, 3], (20.8,6.9,5.9), marker=".", label="T3")
plt.scatter([1, 2, 3, 4], (141.7,42.9,18.6,9.7), marker=".", label="T8")
plt.scatter([1, 2, 3], (27.4,8.2,5.8), marker=".", label="T4")
plt.xticks([1,2,3,4], ["30 vrt./min", "90 vrt./min", "120 vrt./min", "200 vrt./min"])
popt, pcov = curve_fit(func, x, y1, p0=(1, 1e-6, 1))
yy1 = func(xx, *popt)
popt, pcov = curve_fit(func, x, y2, p0=(1, 1e-5, 1))
yy2 = func(xx, *popt)
popt, pcov = curve_fit(func, x, y3, p0=(1, 1e-9, 1))
yy3 = func(xx, *popt)
popt, pcov = curve_fit(func, x, y4, p0=(1, 1e-6, 1))
yy4 = func(xx, *popt)
popt, pcov = curve_fit(func, x, y5, p0=(1, 1e-6, 1))
yy5 = func(xx, *popt)
popt, pcov = curve_fit(func, x1, y6, p0=(1, 1e-6, 1))
yy6 = func(xx, *popt)
popt, pcov = curve_fit(func, x, y7, p0=(1, 1e-8, 1))
yy7 = func(xx, *popt)
popt, pcov = curve_fit(func, x1, y8, p0=(1, 1e-6, 1))
yy8 = func(xx, *popt)

plt.plot(xx, yy1)
plt.plot(xx, yy2)
plt.plot(xx, yy3)
plt.plot(xx, yy4)
plt.plot(xx, yy5)
plt.plot(xx, yy6)
plt.plot(xx, yy7)
plt.plot(xx, yy8)

plt.ylabel("Čas pomešanja [s]")
plt.xlabel("Hitrost mešanja")

plt.legend()
plt.show()
